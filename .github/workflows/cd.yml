name: CD

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repo
      uses: actions/checkout@v1
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 15.x
    - name: Install deps
      run: npm ci
    - name: Build interfaces library
      run: |
        cd workspaces/mantella-interfaces
        npm run build
    - name: Test engine
      run: |
        cd workspaces/mantella-engine
        npm test
        npm run build
    - name: Test express wrapper
      run: |
        cd workspaces/mantella-express
        npm test
        npm run build
        
  release:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Prepare Release
        id: prepare
        uses: karlhulme/github-action-prepare-release@master
        with:
          branchName: main
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Create GitHub Release
        if: steps.prepare.outputs.canRelease == 'yes'
        id: release
        uses: karlhulme/github-action-create-release@master
        with:
          branchName: main
          releaseVersion: ${{ steps.prepare.outputs.releaseVersion }}
          releaseNotes: ${{ steps.prepare.outputs.releaseNotes }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Clone repo
        if: steps.prepare.outputs.canRelease == 'yes'
        uses: actions/checkout@v1
        with:
          ref: v${{ steps.prepare.outputs.releaseVersion }}
      - name: Setup Node.js 15
        if: steps.prepare.outputs.canRelease == 'yes'
        uses: actions/setup-node@v1
        with:
          node-version: 15.x
          registry-url: https://registry.npmjs.org/
      - name: Install deps
        if: steps.release.outputs.didRelease == 'yes'
        run: npm ci
      - name: Publish interfaces
        if: steps.release.outputs.didRelease == 'yes'
        run: |
          cd workspaces/mantella-interfaces
          npm version ${{ steps.prepare.outputs.releaseVersion }}
          npm run build
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
      - name: Publish engine
        if: steps.release.outputs.didRelease == 'yes'
        run: |
          cd workspaces/mantella-engine
          npm version ${{ steps.prepare.outputs.releaseVersion }}
          npm run build
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
      - name: Publish express wrapper
        if: steps.release.outputs.didRelease == 'yes'
        run: |
          cd workspaces/mantella-express
          npm version ${{ steps.prepare.outputs.releaseVersion }}
          npm run build
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

